name: Linting and Testing

on: pull_request

permissions:
  contents: read

jobs:
  linter-artifacthub:
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/artifacthub/ah:v1.14.0
      options: --user 1001
    steps:
      # Step 1: Checkout repository
      - name: Checkout
        uses: actions/checkout@v4.2.2

      # Step 2: Run Artifact Hub linting
      - name: Run ah lint
        working-directory: ./charts
        run: ah lint

  chart-test:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      # Step 2: Set up Helm
      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.10.1 # Update as needed

      # Step 3: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: 3.9

      # Step 4: Set up Chart Linting
      - name: Setup Chart Linting
        id: lint
        uses: helm/chart-testing-action@v2.6.1
        with:
          version: v3.11.0 # Update as needed

      # Step 5: List changed charts
      - name: List changed charts
        id: list-changed
        run: |
          changed=$(ct --config ./.github/configs/ct-lint.yaml list-changed)
          charts=$(echo "$changed" | tr '\n' ' ' | xargs)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "changed_charts=$charts" >> $GITHUB_OUTPUT
          fi

      # Step 6: Run linting tests
      - name: Run chart-testing (lint)
        run: ct lint --debug --config ./.github/configs/ct-lint.yaml --lint-conf ./.github/configs/lintconf.yaml

      # Step 7: Validate Helm chart documentation
      - name: Run docs-testing (helm-docs)
        id: helm-docs
        run: |
          ./scripts/helm-docs.sh
          if [[ $(git diff --stat) != '' ]]; then
            echo -e '\033[0;31mDocumentation outdated!\033[0m ❌'
            git diff --color
            exit 1
          else
            echo -e '\033[0;32mDocumentation up to date\033[0m ✔'
          fi

      # Step 8: Create a Kind cluster for testing
      - name: Create kind cluster
        uses: helm/kind-action@v1.12.0
        if: steps.list-changed.outputs.changed == 'true'
        with:
          config: .github/configs/kind-config.yaml

      # Step 9: Run installation tests
      - name: Run chart-testing (install)
        run: ct install --config ./.github/configs/ct-install.yaml
        if: steps.list-changed.outputs.changed == 'true'
