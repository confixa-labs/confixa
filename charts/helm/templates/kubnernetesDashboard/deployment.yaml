{{- if .Values.kubernetesdashboard.enable }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: {{ .Values.kubernetesdashboard.name }}
  name: {{ .Values.kubernetesdashboard.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: {{ .Values.kubernetesdashboard.name }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.kubernetesdashboard.name }}
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: {{ .Values.kubernetesdashboard.containerName }}
          image: kubernetesui/dashboard:v2.6.1
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              protocol: TCP
          args:
            - --namespace={{ .Release.Namespace }}
          volumeMounts:
            - name: {{ .Values.kubernetesdashboard.secret.certsSecretRef }}
              mountPath: /certs
            - mountPath: /tmp
              name: tmp-volume
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      volumes:
        - name: {{ .Values.kubernetesdashboard.secret.certsSecretRef }}
          secret:
            secretName: {{ .Values.kubernetesdashboard.secret.certsSecretRef }}
        - name: tmp-volume
          emptyDir: {}
      serviceAccountName: {{ .Values.kubernetesdashboard.serviceAccount.adminServiceAccountRef }}
      serviceAccount: {{ .Values.kubernetesdashboard.serviceAccount.adminServiceAccountRef }}
      nodeSelector:
        "kubernetes.io/os": linux
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
{{- end }}
