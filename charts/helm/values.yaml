# REQUIRED DEPENDENCIES VALUES DO NOT REMOVE
redis:
  enable: true
  auth:
    enabled: true
    existingSecret: "redis-password-secret"
  service:
    name: "confixa-redis-master"
  master:
    nodeSelector: {}
  replica:
    replicaCount: 1
    nodeSelector: {}
rabbitmq:
  enable: true
  service:
    name: "confixa-rabbitmq"
  auth:
    username: admin
    existingPasswordSecret: "rabbitmq-password-secret"
mongodb:
  enable: true
  name: "confixa-mongodb"
  containerName: "confixa-mongodb"
  image:
    repository: mongo
    tag: "8.0.5" # Supports both x86_64 and ARM64
    pullPolicy: IfNotPresent
  service:
    name: "confixa-mongodb"
    type: ClusterIP
    port: 27017
  auth:
    rootUser: root
    rootDatabase: "confixa"
    usernames: ["confixa-admin"]
    passwords: ["Sm2dnl23dwe7lerPDD"]
    databases: ["confixa"]
  persistence:
    enabled: true
    size: 8Gi
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
argocd:
  enable: true
  redis:
    enabled: false # Disable the built-in Redis
  ## Set external Redis configuration
  externalRedis:
    host: "confixa-redis-master" # Change this to match your Redis Service name
    port: 6379
    existingSecret: "redis-password-secret" # Kubernetes Secret that stores the Redis password
    existingSecretPasswordKey: "redis-password" # Key in the secret that holds the password
# REQUIRED DEPENDENCIES VALUES ENDS HERE
appName: confixa
commonConfigMap: confixa-configmap
passwordSecretsManagerName: confixa-passwords-secret
passwordRedisSecretsManagerName: redis-password-secret
passwordRabbitMQSecretsManagerName: rabbitmq-password-secret
apiGateway:
  enable: true
  name: confixa-api
  containerName: confixa-api
  cronName: confixa-api-cron
  cronContainerName: confixa-api-cron
  image:
    repository: asia-south1-docker.pkg.dev/confixa-rnd/confixa-docker-images/dev-confixa-api
    tag: sha-2d9385d757bef8c39c9bb4d56d7e5b8db819f8f0
    pullPolicy: Always
  annotations:
    git: https://github.com/confixa/confixa-gitops.git
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 750m
      memory: 1024Mi
  ports:
    containerPort: 5001
    protocol: TCP
  configMapRef: confixa-api
  service:
    protocol: TCP
    port: 80
    targetPort: 5001
    type: ClusterIP
llmKumaApiGateway:
  enable: true
  name: confixa-llm-kuma-api
  containerName: confixa-llm-kuma-api
  image:
    repository: asia-south1-docker.pkg.dev/confixa-rnd/confixa-docker-images/dev-confixa-llm-kuma
    tag: sha-80b288da85180c2683f24a9dcfeb34615be05710
    pullPolicy: Always
  annotations:
    git: https://github.com/confixa/confixa-gitops.git
  replicas: 1
  ports:
    containerPort: 5002
    protocol: TCP
  configMapRef: confixa-llm-kuma-api
  service:
    protocol: TCP
    port: 80
    targetPort: 5002
    type: ClusterIP
frontend:
  enable: true
  name: confixa-frontend
  containerName: confixa-frontend
  image:
    repository: asia-south1-docker.pkg.dev/confixa-rnd/confixa-docker-images/dev-confixa-frontend
    tag: sha-5b1621cd1e46acc0b169b09dbf066a6398aa84be
    pullPolicy: Always
  annotations:
    git: https://github.com/confixa/confixa-gitops.git
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  ports:
    containerPort: 5000
    protocol: TCP
  configMapRef: confixa-frontend
  service:
    protocol: TCP
    port: 80
    targetPort: 5000
    type: ClusterIP