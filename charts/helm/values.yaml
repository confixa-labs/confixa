# REQUIRED DEPENDENCIES VALUES DO NOT REMOVE
redis:
  enable: true
  auth:
    enabled: true
    existingSecret: "redis-password-secret"
  service:
    name: "confixa-redis-master"
  master:
    nodeSelector: {}
  replica:
    replicaCount: 1
    nodeSelector: {}
rabbitmq:
  enable: true
  service:
    name: "confixa-rabbitmq"
  auth:
    username: admin
    existingPasswordSecret: "rabbitmq-password-secret"
mongodb:
  enable: true
  name: "confixa-mongodb"
  containerName: "confixa-mongodb"
  image:
    repository: mongo
    tag: "8.0.5" # Supports both x86_64 and ARM64
    pullPolicy: IfNotPresent
  service:
    name: "confixa-mongodb"
    type: ClusterIP
    port: 27017
  auth:
    rootUser: root
    rootDatabase: "confixa"
    usernames: ["confixa-admin"]
    passwords: ["Sm2dnl23dwe7lerPDD"]
    databases: ["confixa"]
  persistence:
    enabled: true
    size: 8Gi
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
# REQUIRED DEPENDENCIES VALUES ENDS HERE
appName: confixa
commonConfigMap: confixa-configmap
passwordSecretsManagerName: confixa-passwords-secret
passwordRedisSecretsManagerName: redis-password-secret
passwordRabbitMQSecretsManagerName: rabbitmq-password-secret
apiGateway:
  enable: true
  issueCron:
    enable: true
    name: confixa-issue-cron
    containerName: confixa-issue-cron
  monitorCleaner:
    enable: true
    name: confixa-monitor-cleaner
    containerName: confixa-monitor-cleaner
  bitbucketOauthToken:
    enable: true
    name: confixa-bitbucket-oauth-token
    containerName: confixa-bitbucket-oauth-token
  oddSlug:
    enable: true
    name: confixa-odd-slug
    containerName: confixa-odd-slug
  evenSlug:
    enable: true
    name: confixa-even-slug
    containerName: confixa-even-slug
  argoCdCheckStatus:
    enable: true
    name: confixa-argocd-check-status
    containerName: confixa-argocd-check-status
  name: confixa-api
  containerName: confixa-api
  image:
    repository: asia-south1-docker.pkg.dev/confixa-rnd/confixa-docker-images/dev-confixa-api
    tag: sha-c5ca07d7f476df8f9b529a455eddecd5f6a9df32
    pullPolicy: Always
  annotations:
    git: https://github.com/confixa-labs/confixa.git
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 750m
      memory: 1024Mi
  ports:
    containerPort: 5001
    protocol: TCP
  configMapRef: confixa-api
  service:
    protocol: TCP
    port: 80
    targetPort: 5001
    type: ClusterIP
llmKumaApiGateway:
  enable: true
  name: confixa-llm-kuma-api
  containerName: confixa-llm-kuma-api
  image:
    repository: asia-south1-docker.pkg.dev/confixa-rnd/confixa-docker-images/dev-confixa-llm-kuma
    tag: sha-1b9f8fab28e2661a266040d699afd181caaf85bb
    pullPolicy: Always
  annotations:
    git: https://github.com/confixa-labs/confixa.git
  replicas: 1
  ports:
    containerPort: 5002
    protocol: TCP
  configMapRef: confixa-llm-kuma-api
  service:
    name: confixa-llm-kuma-api
    protocol: TCP
    port: 80
    targetPort: 5002
    type: ClusterIP
frontend:
  enable: true
  name: confixa-frontend
  containerName: confixa-frontend
  image:
    repository: asia-south1-docker.pkg.dev/confixa-rnd/confixa-docker-images/dev-confixa-frontend
    tag: sha-4800c38d4e14c2a28a8e9ca17c878cf1c07affab
    pullPolicy: Always
  annotations:
    git: https://github.com/confixa-labs/confixa.git
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  ports:
    containerPort: 5000
    protocol: TCP
  configMapRef: confixa-frontend
  service:
    protocol: TCP
    port: 80
    targetPort: 5000
    type: ClusterIP
watcher:
  enable: false
  name: confixa-watcher
  containerName: confixa-watcher
  image:
    repository: asia-south1-docker.pkg.dev/confixa-rnd/custom-runner/configmap-updates-watcher
    tag: sha-1d2d767afc82565a5f7278d7dd92c5a919a763ce
  annotations:
    git: https://github.com/confixa-labs/confixa.git
  replicas: 1
  secret:
    secretRef:
      variables: confixa-watcher-variables
      file: confixa-watcher
    variables:
      configMapName: confixa-frontend
      deploymentName: confixa-frontend
      customExec: "true"
      execPath: /app/frontend-update.sh
      namespace: backend
      repoUrl: https://github.com/confixa-labs/Confixa-FrontEnd.git
      branch: uat
      serviceAccountKeyPath: /tmp/service-account.json
      dockerRegion: asia-south1-docker.pkg.dev
      gcrProjectId: confixa-rnd
      dockerImageName: custom-runner/public-build
      containerName: confixa-frontend
    file:
      mountPath: /mnt/secrets
      secretInfo: '{key:"value"}'
  serviceAccount:
    serviceAccountRef: confixa-configmap-watcher
    volumeRef: confixa-watcher-volume
  docker:
    dockerRef: docker-socket
    dockerType: Socket
    mountPath: /var/run/docker.sock
  role:
    roleRef: confixa-watcher-role
  roleBinding:
    roleBindingRef: confixa-watcher-role-binding
# SERVICE URLS
service:
  url:
    frontend: 'http://localhost:5000'
    backend: 'http://localhost:5001'
    argocd: 'http://localhost:3000'
    kubeCost: 'http://localhost:9090'
    clusterDashboard: 'http://localhost:9091'
